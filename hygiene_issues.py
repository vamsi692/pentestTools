import os
class HygieneIssues:
    def __init__(self, headers):
        self.headers = headers

    def main(self):
        self.X_Frame_Options()
        self.CSP()
        self.X_CONTENT_TYPE_Options()
        self.Server()
        self.Strict_Transport_Security()

    def X_Frame_Options(self):
        if('X-FRAME-OPTIONS' in self.headers):
            if(self.headers['X-FRAME-OPTIONS'].upper()!="SAMEORIGIN"):
                print("X-Frame-Options has been configured improperly")
        elif ('X-FRAME-OPTIONS' not in self.headers):
            print("Missing X-Frame-Options header")

    def Server(self):
        if('SERVER' in self.headers):
            print(f"possible Banner grabbing. Check if {self.headers['SERVER']} is vulnerable.")

    def CSP(self):
        if('CONTENT-SECURITY-POLICY' not in self.headers):
            print("Missing CSP header")
        elif('CONTENT-SECURITY-POLICY' in self.headers):
            for directive in self.headers['CONTENT-SECURITY-POLICY'].split(';'):
                if "script-src" in directive:
                    if "unsafe-inline" in directive:
                        print("Misconfigured CSP header")
                    else:
                        break
                else:
                    print("Misconfigured CSP header")

    def Strict_Transport_Security(self):
         if('STRICT-TRANSORT-SECURITY' not in self.headers):
            print("Missing HSTS header")

    def X_CONTENT_TYPE_OPTIONS(self):
        if('X-CONTENT-TYPE-OPTIONS' in self.headers):
            if(self.headers['X-CONTENT-TYPE-OPTIONS'].upper()!="NOSNIFF"):
                print("X-Content-Type-Options has been configured improperly")
        elif ('X-CONTENT-TYPE-OPTIONS'not in self.headers):
            print("Missing X-Content-Type-Options header")


